{
  "backup_info": {
    "name": "Evidența Cheltuielilor - Backup Complet",
    "date": "2024-12-19",
    "version": "2.0.0",
    "description": "Backup complet al aplicației de evidență cheltuieli cu toate componentele, hooks, utilități și configurări",
    "components_count": 45,
    "total_files": 75
  },
  "files": {
    "/App.tsx": "import { useState, useEffect, useCallback } from \"react\";\nimport { YearSelector } from \"./components/YearSelector\";\nimport { YearMonthsView } from \"./components/YearMonthsView\";\nimport { MonthExpenses } from \"./components/MonthExpenses\";\nimport { ReportsView } from \"./components/ReportsView\";\nimport { FuelRequestApp } from \"./components/FuelRequestApp\";\nimport { ExpirationAlerts } from \"./components/ExpirationAlerts\";\nimport { ExpirationBadge } from \"./components/ExpirationBadge\";\nimport { DashboardWidgets } from \"./components/DashboardWidgets\";\nimport { DarkModeToggle, ThemeProvider } from \"./components/DarkModeToggle\";\nimport { LoadingScreen } from \"./components/LoadingScreen\";\nimport { StatusIndicators } from \"./components/StatusIndicators\";\nimport { QuickActions } from \"./components/QuickActions\";\nimport { DatabaseOperationsModal, DatabaseOperation } from \"./components/DatabaseOperationsModal\";\nimport { Expense } from \"./types/expense\";\nimport { usePWA } from \"./hooks/usePWA\";\nimport { useDatabase } from \"./hooks/useDatabase\";\nimport { useAppState } from \"./hooks/useAppState\";\nimport { CURRENT_YEAR, getMonthName, getMonthStats, getYearStats, setupPeriodicNotifications } from \"./utils/appUtils\";\n\nexport default function App() {\n  const [allExpenses, setAllExpenses] = useState<Expense[]>([]);\n  const [showDatabaseModal, setShowDatabaseModal] = useState(false);\n  const [pendingOperation, setPendingOperation] = useState<DatabaseOperation | null>(null);\n  const [isOperationInProgress, setIsOperationInProgress] = useState(false);\n  \n  // Custom hooks\n  const pwa = usePWA();\n  const database = useDatabase();\n  const appState = useAppState();\n\n  // Initialize app\n  useEffect(() => {\n    let mounted = true;\n\n    const initializeApp = async () => {\n      try {\n        if (!mounted) return;\n        \n        console.log('Initializing app...');\n        appState.setSelectedYear(CURRENT_YEAR);\n        \n        const expenses = await database.loadAllExpenses();\n        if (!mounted) return;\n        \n        console.log('Loaded expenses:', expenses.length);\n        setAllExpenses(expenses);\n        \n        const currentYearExpenses = expenses.filter(e => e.month.startsWith(`${CURRENT_YEAR}-`));\n        if (currentYearExpenses.length === 0) {\n          console.log('Generating expenses for current year:', CURRENT_YEAR);\n          const updatedExpenses = await database.generateExpensesForYear(CURRENT_YEAR);\n          if (!mounted) return;\n          \n          console.log('Generated expenses:', updatedExpenses.length);\n          setAllExpenses(updatedExpenses);\n        }\n        \n        if (pwa.isPWACompatible) {\n          setupPeriodicNotifications(expenses, pwa.notificationsEnabled, pwa.isPWACompatible, pwa.sendNotification);\n        }\n        \n      } catch (error) {\n        console.error('Error initializing app:', error);\n      } finally {\n        if (mounted) {\n          appState.setLoading(false);\n        }\n      }\n    };\n\n    initializeApp();\n    return () => { mounted = false; };\n  }, []);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      try {\n        database.dbManager.disconnect();\n      } catch (error) {\n        console.warn('Error disconnecting database:', error);\n      }\n    };\n  }, [database.dbManager]);\n\n  // Enhanced handlers\n  const handleYearChangeWithData = useCallback(async (year: number) => {\n    if (database.isLoading) return;\n    \n    try {\n      const yearExpenses = allExpenses.filter(e => e.month.startsWith(`${year}-`));\n      if (yearExpenses.length === 0) {\n        appState.setLoading(true);\n        const updatedExpenses = await database.generateExpensesForYear(year);\n        setAllExpenses(updatedExpenses);\n        appState.setLoading(false);\n      }\n      appState.handleYearChange(year);\n    } catch (error) {\n      console.error('Error changing year:', error);\n    }\n  }, [allExpenses, database, appState]);\n\n  const handleExpensesUpdateWithState = useCallback(async (updatedExpenses: Expense[]) => {\n    try {\n      const freshExpenses = await database.handleExpensesUpdate(updatedExpenses);\n      if (freshExpenses) {\n        setAllExpenses(freshExpenses);\n      }\n    } catch (error) {\n      console.error('Error updating expenses:', error);\n    }\n  }, [database]);\n\n  // Handler pentru backup import - înlocuiește toate datele\n  const handleBackupImport = useCallback(async (importedExpenses: Expense[]) => {\n    try {\n      appState.setLoading(true);\n      \n      // Șterge toate datele existente\n      await database.dbManager.clearAllData();\n      \n      // Inserează datele importate\n      const insertPromises = importedExpenses.map(expense => \n        database.dbManager.upsertExpense(expense)\n      );\n      await Promise.all(insertPromises);\n      \n      // Reîncarcă datele\n      const updatedExpenses = await database.loadAllExpenses();\n      setAllExpenses(updatedExpenses);\n      \n      console.log('Backup import completed:', {\n        imported: importedExpenses.length,\n        loaded: updatedExpenses.length\n      });\n      \n      // Afișează notificare de succes\n      if (pwa.notificationsEnabled && pwa.isPWACompatible) {\n        pwa.sendNotification(\n          'Backup importat cu succes!', \n          `${updatedExpenses.length} cheltuieli au fost încărcate din backup.`, \n          '/'\n        );\n      }\n      \n    } catch (error) {\n      console.error('Error importing backup:', error);\n      alert('A apărut o eroare la importul backup-ului. Verifică consola pentru detalii.');\n    } finally {\n      appState.setLoading(false);\n    }\n  }, [database, appState, pwa]);\n\n  const handleServiceDeleteWithState = useCallback(async (expenseId: string) => {\n    try {\n      const updatedExpenses = await database.handleServiceDelete(expenseId, allExpenses);\n      if (updatedExpenses) {\n        setAllExpenses(updatedExpenses);\n      }\n    } catch (error) {\n      console.error('Error deleting service:', error);\n    }\n  }, [allExpenses, database]);\n\n  // Database operations handlers cu modale\n  const handleDatabaseOperationRequest = useCallback((operation: DatabaseOperation) => {\n    if (database.isLoading || isOperationInProgress) return;\n    \n    setPendingOperation(operation);\n    setShowDatabaseModal(true);\n  }, [database.isLoading, isOperationInProgress]);\n\n  const handleDatabaseOperationConfirm = useCallback(async () => {\n    if (!pendingOperation) return;\n    \n    try {\n      setIsOperationInProgress(true);\n      \n      let updatedExpenses: Expense[] = [];\n      let successMessage = '';\n      let notificationTitle = '';\n      let notificationBody = '';\n\n      switch (pendingOperation) {\n        case 'addMissing':\n          updatedExpenses = await database.handleAddMissingServices();\n          successMessage = 'Serviciile lipsă au fost adăugate cu succes! Verifică categoriile pentru a vedea toate serviciile.';\n          notificationTitle = 'Servicii adăugate!';\n          notificationBody = 'Toate serviciile lipsă au fost adăugate cu succes.';\n          break;\n          \n        case 'refresh':\n          updatedExpenses = await database.handleDatabaseRefresh();\n          successMessage = 'Baza de date a fost curățată cu succes!';\n          notificationTitle = 'Baza de date actualizată!';\n          notificationBody = 'Toate datele au fost reorganizate cu succes.';\n          break;\n          \n        case 'regenerate':\n          updatedExpenses = await database.handleRegenerateAllData(CURRENT_YEAR);\n          successMessage = 'Datele au fost regenerate cu succes! Toate serviciile sunt acum disponibile.';\n          notificationTitle = 'Date regenerate!';\n          notificationBody = 'Toate serviciile au fost recreate cu configurația actualizată.';\n          break;\n      }\n\n      setAllExpenses(updatedExpenses);\n\n      // Afișează notificare de succes\n      if (pwa.notificationsEnabled && pwa.isPWACompatible) {\n        pwa.sendNotification(notificationTitle, notificationBody, '/');\n      } else {\n        alert(successMessage);\n      }\n\n      // Închide modal-ul după 2 secunde\n      setTimeout(() => {\n        setShowDatabaseModal(false);\n        setPendingOperation(null);\n      }, 2000);\n\n    } catch (error) {\n      console.error(`Error ${pendingOperation}:`, error);\n      alert(`A apărut o eroare la ${pendingOperation === 'addMissing' ? 'adăugarea serviciilor' : pendingOperation === 'refresh' ? 'curățarea bazei de date' : 'regenerarea datelor'}.`);\n    } finally {\n      setIsOperationInProgress(false);\n    }\n  }, [pendingOperation, database, pwa, CURRENT_YEAR]);\n\n  const handleDatabaseOperationCancel = useCallback(() => {\n    if (isOperationInProgress) return;\n    \n    setShowDatabaseModal(false);\n    setPendingOperation(null);\n  }, [isOperationInProgress]);\n\n  // Show loading screen during initialization\n  if (appState.loading) {\n    return (\n      <ThemeProvider>\n        <LoadingScreen isPWACompatible={pwa.isPWACompatible} />\n      </ThemeProvider>\n    );\n  }\n\n  // Fuel Requests view - NOUA APLICAȚIE\n  if (appState.currentView === 'fuel-requests') {\n    return (\n      <ThemeProvider>\n        <FuelRequestApp onBack={appState.handleBackToHome} />\n      </ThemeProvider>\n    );\n  }\n\n  // Reports view\n  if (appState.currentView === 'reports') {\n    return (\n      <ThemeProvider>\n        <ReportsView\n          expenses={allExpenses}\n          reportsContext={appState.reportsContext}\n          onBack={appState.handleBackToHome}\n        />\n      </ThemeProvider>\n    );\n  }\n\n  // Dashboard view\n  if (appState.currentView === 'dashboard') {\n    return (\n      <ThemeProvider>\n        <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50 p-4\">\n          <div className=\"max-w-7xl mx-auto\">\n            <header className=\"mb-8\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <button \n                  onClick={appState.handleBackToHome}\n                  disabled={database.isLoading}\n                  className=\"bg-gradient-to-r from-gray-500 to-gray-600 hover:from-gray-600 hover:to-gray-700 text-white px-4 py-2 rounded-lg shadow-lg transform transition-all duration-200 hover:scale-105 hover:shadow-xl border-b-4 border-gray-700 active:border-b-2 active:translate-y-1 flex items-center space-x-2 disabled:opacity-50 disabled:cursor-not-allowed disabled:transform-none\"\n                >\n                  <span>← Înapoi la calendar</span>\n                </button>\n                <DarkModeToggle />\n              </div>\n            </header>\n\n            <DashboardWidgets \n              expenses={allExpenses} \n              year={appState.selectedYear} \n              month={appState.selectedMonth} \n            />\n          </div>\n        </div>\n      </ThemeProvider>\n    );\n  }\n\n  // Month view\n  if (appState.currentView === 'month' && appState.selectedMonth) {\n    return (\n      <ThemeProvider>\n        <div>\n          <div className=\"max-w-7xl mx-auto p-4\">\n            <ExpirationAlerts expenses={allExpenses} />\n          </div>\n          \n          <MonthExpenses\n            month={appState.selectedMonth}\n            monthName={getMonthName(appState.selectedMonth)}\n            expenses={allExpenses}\n            onExpensesUpdate={handleExpensesUpdateWithState}\n            onServiceDelete={handleServiceDeleteWithState}\n            onShowReports={appState.handleShowReportsFromMonth}\n            onBack={appState.handleBackToYear}\n          />\n        </div>\n      </ThemeProvider>\n    );\n  }\n\n  // Year view\n  if (appState.currentView === 'year') {\n    return (\n      <ThemeProvider>\n        <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50 p-4\">\n          <div className=\"max-w-7xl mx-auto\">\n            <header className=\"mb-8\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <button \n                  onClick={appState.handleBackToHome}\n                  disabled={database.isLoading}\n                  className=\"bg-gradient-to-r from-gray-500 to-gray-600 hover:from-gray-600 hover:to-gray-700 text-white px-4 py-2 rounded-lg shadow-lg transform transition-all duration-200 hover:scale-105 hover:shadow-xl border-b-4 border-gray-700 active:border-b-2 active:translate-y-1 flex items-center space-x-2 disabled:opacity-50 disabled:cursor-not-allowed disabled:transform-none\"\n                >\n                  <span>← Înapoi la calendar</span>\n                </button>\n                \n                <StatusIndicators \n                  pwa={pwa}\n                  database={database}\n                  onRefresh={() => handleDatabaseOperationRequest('refresh')}\n                  onShowReports={appState.handleShowReportsFromYear}\n                  selectedYear={appState.selectedYear}\n                  expenses={allExpenses}\n                />\n              </div>\n              <h1 className=\"text-4xl font-bold mb-2 bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent drop-shadow-lg\">\n                Evidența Cheltuielilor\n              </h1>\n              <p className=\"text-gray-600 text-lg\">\n                Selectează o lună din {appState.selectedYear} pentru a gestiona cheltuielile\n              </p>\n            </header>\n\n            <ExpirationAlerts expenses={allExpenses} />\n\n            <YearMonthsView\n              year={appState.selectedYear}\n              onMonthClick={appState.handleMonthClick}\n              getMonthStats={(month: string) => getMonthStats(month, allExpenses)}\n            />\n          </div>\n        </div>\n      </ThemeProvider>\n    );\n  }\n\n  // Home view\n  return (\n    <ThemeProvider>\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50 p-4\">\n        <div className=\"max-w-7xl mx-auto\">\n          <header className=\"mb-8 text-center\">\n            <div className=\"flex items-center justify-center space-x-4 mb-4\">\n              <h1 className=\"text-4xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent drop-shadow-lg\">\n                Evidența Cheltuielilor\n              </h1>\n              <ExpirationBadge expenses={allExpenses} />\n              <DarkModeToggle />\n            </div>\n            <p className=\"text-gray-600 text-lg\">\n              Selectează anul pentru a vedea lunile și gestiona cheltuielile\n            </p>\n            \n            {!pwa.isPWACompatible && (\n              <div className=\"mt-4 mb-4 bg-amber-50 border border-amber-200 rounded-lg p-3\">\n                <div className=\"flex items-center justify-center space-x-2 text-amber-800\">\n                  <span className=\"text-sm\">\n                    Mod Preview - Aplicația funcționează cu funcționalități de bază. \n                    Pentru experiența completă PWA, accesează aplicația într-un browser complet.\n                  </span>\n                </div>\n              </div>\n            )}\n            \n            <StatusIndicators \n              pwa={pwa}\n              database={database}\n              onRefresh={() => handleDatabaseOperationRequest('refresh')}\n              onShowReports={appState.handleShowReportsFromHome}\n              selectedYear={appState.selectedYear}\n              expenses={allExpenses}\n              isHomeView={true}\n            />\n          </header>\n\n          <ExpirationAlerts expenses={allExpenses} />\n\n          <QuickActions \n            onShowReports={appState.handleShowReportsFromHome}\n            onShowDashboard={appState.setDashboardView}\n            onShowFuelRequests={appState.setFuelRequestsView}\n            onAddMissingServices={() => handleDatabaseOperationRequest('addMissing')}\n            onRefreshDatabase={() => handleDatabaseOperationRequest('refresh')}\n            onRegenerateData={() => handleDatabaseOperationRequest('regenerate')}\n            isLoading={database.isLoading || isOperationInProgress}\n            expenses={allExpenses}\n            onExpensesUpdate={handleBackupImport}\n          />\n\n          <YearSelector\n            currentYear={appState.selectedYear}\n            onYearChange={handleYearChangeWithData}\n            yearStats={getYearStats(allExpenses)}\n          />\n\n          <div className=\"text-center mt-8\">\n            <div className=\"flex items-center justify-center space-x-8 text-sm text-gray-600\">\n              <div className=\"flex items-center space-x-2\">\n                <div className=\"w-4 h-4 bg-green-400 rounded border-2 border-green-500 shadow-lg\"></div>\n                <span>Lună completă</span>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <div className=\"w-4 h-4 bg-red-400 rounded border-2 border-red-500 shadow-lg\"></div>\n                <span>Lună incompletă</span>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <div className=\"w-4 h-4 bg-gray-300 rounded border-2 border-gray-400 shadow-lg\"></div>\n                <span>Fără date</span>\n              </div>\n            </div>\n          </div>\n\n          {pwa.isPWACompatible && pwa.isInstalled && (\n            <div className=\"mt-8 text-center\">\n              <div className=\"bg-green-100 text-green-800 border-green-300 px-4 py-2 rounded inline-flex items-center\">\n                <span>📱 Aplicația este instalată și funcționează ca o aplicație nativă!</span>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Database Operations Modal */}\n        <DatabaseOperationsModal\n          isOpen={showDatabaseModal}\n          onClose={handleDatabaseOperationCancel}\n          operation={pendingOperation}\n          isLoading={isOperationInProgress}\n          onConfirm={handleDatabaseOperationConfirm}\n        />\n      </div>\n    </ThemeProvider>\n  );\n}",
    "/package.json": "{\n  \"name\": \"evidenta-cheltuieli\",\n  \"private\": true,\n  \"version\": \"2.0.0\",\n  \"type\": \"module\",\n  \"scripts\": {\n    \"dev\": \"vite\",\n    \"build\": \"tsc -b && vite build\",\n    \"lint\": \"eslint .\",\n    \"preview\": \"vite preview\",\n    \"db:push\": \"prisma db push\",\n    \"db:generate\": \"prisma generate\",\n    \"db:seed\": \"tsx prisma/seed.ts\"\n  },\n  \"dependencies\": {\n    \"@prisma/client\": \"^5.22.0\",\n    \"@radix-ui/react-accordion\": \"^1.2.1\",\n    \"@radix-ui/react-alert-dialog\": \"^1.1.2\",\n    \"@radix-ui/react-aspect-ratio\": \"^1.1.0\",\n    \"@radix-ui/react-avatar\": \"^1.1.1\",\n    \"@radix-ui/react-checkbox\": \"^1.1.2\",\n    \"@radix-ui/react-collapsible\": \"^1.1.1\",\n    \"@radix-ui/react-context-menu\": \"^2.2.2\",\n    \"@radix-ui/react-dialog\": \"^1.1.2\",\n    \"@radix-ui/react-dropdown-menu\": \"^2.1.2\",\n    \"@radix-ui/react-hover-card\": \"^1.1.2\",\n    \"@radix-ui/react-label\": \"^2.1.0\",\n    \"@radix-ui/react-menubar\": \"^1.1.2\",\n    \"@radix-ui/react-navigation-menu\": \"^1.2.1\",\n    \"@radix-ui/react-popover\": \"^1.1.2\",\n    \"@radix-ui/react-progress\": \"^1.1.0\",\n    \"@radix-ui/react-radio-group\": \"^1.2.1\",\n    \"@radix-ui/react-scroll-area\": \"^1.2.0\",\n    \"@radix-ui/react-select\": \"^2.1.2\",\n    \"@radix-ui/react-separator\": \"^1.1.0\",\n    \"@radix-ui/react-slider\": \"^1.2.1\",\n    \"@radix-ui/react-slot\": \"^1.1.0\",\n    \"@radix-ui/react-switch\": \"^1.1.1\",\n    \"@radix-ui/react-tabs\": \"^1.1.1\",\n    \"@radix-ui/react-toggle\": \"^1.1.0\",\n    \"@radix-ui/react-toggle-group\": \"^1.1.0\",\n    \"@radix-ui/react-tooltip\": \"^1.1.3\",\n    \"class-variance-authority\": \"^0.7.0\",\n    \"clsx\": \"^2.1.1\",\n    \"cmdk\": \"1.0.0\",\n    \"date-fns\": \"^4.1.0\",\n    \"embla-carousel-react\": \"^8.3.0\",\n    \"input-otp\": \"^1.4.1\",\n    \"lucide-react\": \"^0.453.0\",\n    \"motion\": \"^10.18.0\",\n    \"next-themes\": \"^0.4.3\",\n    \"react\": \"^18.3.1\",\n    \"react-day-picker\": \"^9.2.0\",\n    \"react-dom\": \"^18.3.1\",\n    \"react-hook-form\": \"^7.55.0\",\n    \"react-resizable-panels\": \"^2.1.7\",\n    \"recharts\": \"^2.13.3\",\n    \"sonner\": \"^1.7.1\",\n    \"tailwind-merge\": \"^2.5.4\",\n    \"tailwindcss-animate\": \"^1.0.7\",\n    \"vaul\": \"^1.1.1\"\n  },\n  \"devDependencies\": {\n    \"@eslint/js\": \"^9.13.0\",\n    \"@types/node\": \"^22.9.0\",\n    \"@types/react\": \"^18.3.12\",\n    \"@types/react-dom\": \"^18.3.1\",\n    \"@vitejs/plugin-react\": \"^4.3.3\",\n    \"autoprefixer\": \"^10.4.20\",\n    \"eslint\": \"^9.13.0\",\n    \"eslint-plugin-react-hooks\": \"^5.0.0\",\n    \"eslint-plugin-react-refresh\": \"^0.4.14\",\n    \"globals\": \"^15.11.0\",\n    \"postcss\": \"^8.4.49\",\n    \"prisma\": \"^5.22.0\",\n    \"tailwindcss\": \"^4.0.0\",\n    \"tsx\": \"^4.19.2\",\n    \"typescript\": \"~5.6.2\",\n    \"typescript-eslint\": \"^8.11.0\",\n    \"vite\": \"^5.4.10\",\n    \"vite-plugin-pwa\": \"^0.21.1\"\n  }\n}",
    "/index.html": "<!doctype html>\n<html lang=\"ro\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <link rel=\"icon\" type=\"image/svg+xml\" href=\"/vite.svg\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <meta name=\"description\" content=\"Aplicație pentru evidența cheltuielilor lunare cu sistem de notificări și rapoarte\" />\n    <meta name=\"theme-color\" content=\"#3b82f6\" />\n    <link rel=\"manifest\" href=\"/manifest.json\" />\n    <title>Evidența Cheltuielilor</title>\n  </head>\n  <body>\n    <div id=\"root\"></div>\n    <script type=\"module\" src=\"/src/main.tsx\"></script>\n  </body>\n</html>",
    "/vite.config.ts": "import { defineConfig } from 'vite'\nimport react from '@vitejs/plugin-react'\nimport { VitePWA } from 'vite-plugin-pwa'\nimport path from 'path'\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    VitePWA({\n      registerType: 'autoUpdate',\n      workbox: {\n        globPatterns: ['**/*.{js,css,html,ico,png,svg}']\n      },\n      includeAssets: ['favicon.ico', 'apple-touch-icon.png', 'masked-icon.svg'],\n      manifest: {\n        name: 'Evidența Cheltuielilor',\n        short_name: 'Cheltuieli',\n        description: 'Aplicație pentru evidența cheltuielilor lunare',\n        theme_color: '#3b82f6',\n        background_color: '#ffffff',\n        display: 'standalone',\n        icons: [\n          {\n            src: 'pwa-192x192.png',\n            sizes: '192x192',\n            type: 'image/png'\n          },\n          {\n            src: 'pwa-512x512.png',\n            sizes: '512x512',\n            type: 'image/png'\n          }\n        ]\n      }\n    })\n  ],\n  resolve: {\n    alias: {\n      '@': path.resolve(__dirname, './src'),\n    },\n  },\n  server: {\n    port: 3000,\n    host: true\n  },\n  build: {\n    outDir: 'dist',\n    sourcemap: true\n  }\n})",
    "/styles/globals.css": "@custom-variant dark (&:is(.dark *));\n\n:root {\n  --font-size: 14px;\n  --text-xs: 0.75rem;\n  --text-sm: 0.875rem;\n  --text-base: 1rem;\n  --text-lg: 1.125rem;\n  --text-xl: 1.25rem;\n  --text-2xl: 1.5rem;\n  --text-3xl: 1.875rem;\n  --text-4xl: 2.25rem;\n  --text-5xl: 3rem;\n  --text-6xl: 3.75rem;\n  --background: #ffffff;\n  --foreground: oklch(0.145 0 0);\n  --card: #ffffff;\n  --card-foreground: oklch(0.145 0 0);\n  --popover: oklch(1 0 0);\n  --popover-foreground: oklch(0.145 0 0);\n  --primary: #030213;\n  --primary-foreground: oklch(1 0 0);\n  --secondary: oklch(0.95 0.0058 264.53);\n  --secondary-foreground: #030213;\n  --muted: #ececf0;\n  --muted-foreground: #717182;\n  --accent: #e9ebef;\n  --accent-foreground: #030213;\n  --destructive: #d4183d;\n  --destructive-foreground: #ffffff;\n  --border: rgba(0, 0, 0, 0.1);\n  --input: transparent;\n  --input-background: #f3f3f5;\n  --switch-background: #cbced4;\n  --font-weight-medium: 500;\n  --font-weight-normal: 400;\n  --ring: oklch(0.708 0 0);\n  --chart-1: oklch(0.646 0.222 41.116);\n  --chart-2: oklch(0.6 0.118 184.704);\n  --chart-3: oklch(0.398 0.07 227.392);\n  --chart-4: oklch(0.828 0.189 84.429);\n  --chart-5: oklch(0.769 0.188 70.08);\n  --radius: 0.625rem;\n  --sidebar: oklch(0.985 0 0);\n  --sidebar-foreground: oklch(0.145 0 0);\n  --sidebar-primary: #030213;\n  --sidebar-primary-foreground: oklch(0.985 0 0);\n  --sidebar-accent: oklch(0.97 0 0);\n  --sidebar-accent-foreground: oklch(0.205 0 0);\n  --sidebar-border: oklch(0.922 0 0);\n  --sidebar-ring: oklch(0.708 0 0);\n  \n  /* Variabile pentru efecte 3D moderne și performante */\n  --shadow-subtle: 0 1px 3px rgba(0, 0, 0, 0.08), 0 1px 2px rgba(0, 0, 0, 0.06);\n  --shadow-medium: 0 4px 6px rgba(0, 0, 0, 0.07), 0 2px 4px rgba(0, 0, 0, 0.05);\n  --shadow-heavy: 0 10px 15px rgba(0, 0, 0, 0.1), 0 4px 6px rgba(0, 0, 0, 0.05);\n  --shadow-inset: inset 0 2px 4px rgba(0, 0, 0, 0.06);\n  --border-3d-light: rgba(255, 255, 255, 0.7);\n  --border-3d-medium: rgba(0, 0, 0, 0.08);\n  --border-3d-dark: rgba(0, 0, 0, 0.12);\n  \n  /* Gradienturi pentru efecte 3D */\n  --gradient-light: linear-gradient(145deg, rgba(255, 255, 255, 0.95), rgba(255, 255, 255, 0.8));\n  --gradient-pressed: linear-gradient(145deg, rgba(255, 255, 255, 0.8), rgba(255, 255, 255, 0.95));\n}\n\n.dark {\n  --background: oklch(0.145 0 0);\n  --foreground: oklch(0.985 0 0);\n  --card: oklch(0.145 0 0);\n  --card-foreground: oklch(0.985 0 0);\n  --popover: oklch(0.145 0 0);\n  --popover-foreground: oklch(0.985 0 0);\n  --primary: oklch(0.985 0 0);\n  --primary-foreground: oklch(0.205 0 0);\n  --secondary: oklch(0.269 0 0);\n  --secondary-foreground: oklch(0.985 0 0);\n  --muted: oklch(0.269 0 0);\n  --muted-foreground: oklch(0.708 0 0);\n  --accent: oklch(0.269 0 0);\n  --accent-foreground: oklch(0.985 0 0);\n  --destructive: oklch(0.396 0.141 25.723);\n  --destructive-foreground: oklch(0.637 0.237 25.331);\n  --border: oklch(0.269 0 0);\n  --input: oklch(0.269 0 0);\n  --ring: oklch(0.439 0 0);\n  --font-weight-medium: 500;\n  --font-weight-normal: 400;\n  --chart-1: oklch(0.488 0.243 264.376);\n  --chart-2: oklch(0.696 0.17 162.48);\n  --chart-3: oklch(0.769 0.188 70.08);\n  --chart-4: oklch(0.627 0.265 303.9);\n  --chart-5: oklch(0.645 0.246 16.439);\n  --sidebar: oklch(0.205 0 0);\n  --sidebar-foreground: oklch(0.985 0 0);\n  --sidebar-primary: oklch(0.488 0.243 264.376);\n  --sidebar-primary-foreground: oklch(0.985 0 0);\n  --sidebar-accent: oklch(0.269 0 0);\n  --sidebar-accent-foreground: oklch(0.985 0 0);\n  --sidebar-border: oklch(0.269 0 0);\n  --sidebar-ring: oklch(0.439 0 0);\n  \n  /* Variabile 3D pentru tema întunecată */\n  --shadow-subtle: 0 1px 3px rgba(0, 0, 0, 0.2), 0 1px 2px rgba(0, 0, 0, 0.15);\n  --shadow-medium: 0 4px 6px rgba(0, 0, 0, 0.25), 0 2px 4px rgba(0, 0, 0, 0.2);\n  --shadow-heavy: 0 10px 15px rgba(0, 0, 0, 0.3), 0 4px 6px rgba(0, 0, 0, 0.25);\n  --shadow-inset: inset 0 2px 4px rgba(0, 0, 0, 0.2);\n  --border-3d-light: rgba(255, 255, 255, 0.1);\n  --border-3d-medium: rgba(0, 0, 0, 0.2);\n  --border-3d-dark: rgba(0, 0, 0, 0.3);\n  \n  --gradient-light: linear-gradient(145deg, rgba(45, 45, 45, 0.95), rgba(35, 35, 35, 0.8));\n  --gradient-pressed: linear-gradient(145deg, rgba(35, 35, 35, 0.8), rgba(45, 45, 45, 0.95));\n}\n\n@theme inline {\n  --color-background: var(--background);\n  --color-foreground: var(--foreground);\n  --color-card: var(--card);\n  --color-card-foreground: var(--card-foreground);\n  --color-popover: var(--popover);\n  --color-popover-foreground: var(--popover-foreground);\n  --color-primary: var(--primary);\n  --color-primary-foreground: var(--primary-foreground);\n  --color-secondary: var(--secondary);\n  --color-secondary-foreground: var(--secondary-foreground);\n  --color-muted: var(--muted);\n  --color-muted-foreground: var(--muted-foreground);\n  --color-accent: var(--accent);\n  --color-accent-foreground: var(--accent-foreground);\n  --color-destructive: var(--destructive);\n  --color-destructive-foreground: var(--destructive-foreground);\n  --color-border: var(--border);\n  --color-input: var(--input);\n  --color-input-background: var(--input-background);\n  --color-switch-background: var(--switch-background);\n  --color-ring: var(--ring);\n  --color-chart-1: var(--chart-1);\n  --color-chart-2: var(--chart-2);\n  --color-chart-3: var(--chart-3);\n  --color-chart-4: var(--chart-4);\n  --color-chart-5: var(--chart-5);\n  --radius-sm: calc(var(--radius) - 4px);\n  --radius-md: calc(var(--radius) - 2px);\n  --radius-lg: var(--radius);\n  --radius-xl: calc(var(--radius) + 4px);\n  --color-sidebar: var(--sidebar);\n  --color-sidebar-foreground: var(--sidebar-foreground);\n  --color-sidebar-primary: var(--sidebar-primary);\n  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);\n  --color-sidebar-accent: var(--sidebar-accent);\n  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);\n  --color-sidebar-border: var(--sidebar-border);\n  --color-sidebar-ring: var(--sidebar-ring);\n  --text-xs: 0.75rem;\n  --text-sm: 0.875rem;\n  --text-base: 1rem;\n  --text-lg: 1.125rem;\n  --text-xl: 1.25rem;\n  --text-2xl: 1.5rem;\n  --text-3xl: 1.875rem;\n  --text-4xl: 2.25rem;\n  --text-5xl: 3rem;\n  --text-6xl: 3.75rem;\n}\n\n@layer base {\n  * {\n    @apply border-border outline-ring/50;\n  }\n\n  body {\n    @apply bg-background text-foreground;\n    /* Gradient modern pentru întreaga aplicație */\n    background: radial-gradient(ellipse at top, rgba(59, 130, 246, 0.1) 0%, transparent 50%),\n                radial-gradient(ellipse at bottom, rgba(147, 51, 234, 0.1) 0%, transparent 50%),\n                linear-gradient(135deg, #f8fafc 0%, #e2e8f0 25%, #f1f5f9 50%, #e5e7eb 75%, #f9fafb 100%);\n    min-height: 100vh;\n  }\n  \n  /* =================================\n     SISTEM DE ANIMAȚII 3D COMPLET\n     ================================= */\n  \n  /* Carduri cu efecte 3D */\n  .card-3d {\n    background: var(--gradient-light);\n    box-shadow: var(--shadow-medium);\n    border: 1px solid var(--border-3d-light);\n    border-bottom: 3px solid var(--border-3d-dark);\n    border-right: 2px solid var(--border-3d-medium);\n    transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n    position: relative;\n    overflow: hidden;\n  }\n  \n  .card-3d::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 1px;\n    background: var(--border-3d-light);\n    opacity: 0.6;\n  }\n  \n  .card-3d:hover {\n    box-shadow: var(--shadow-heavy);\n    transform: translateY(-4px) scale(1.02);\n    border-bottom: 4px solid var(--border-3d-dark);\n  }\n  \n  /* Grupuri de servicii cu animații */\n  .service-group {\n    background: var(--gradient-light);\n    box-shadow: var(--shadow-medium);\n    border: 2px solid var(--border-3d-light);\n    border-bottom: 5px solid var(--border-3d-dark);\n    border-right: 3px solid var(--border-3d-medium);\n    transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n    position: relative;\n    overflow: hidden;\n  }\n  \n  .service-group::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 2px;\n    background: linear-gradient(90deg, transparent, var(--border-3d-light), transparent);\n    opacity: 0.8;\n  }\n  \n  .service-group::after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    height: 1px;\n    background: var(--border-3d-dark);\n    opacity: 0.3;\n  }\n  \n  .service-group:hover {\n    box-shadow: var(--shadow-heavy);\n    transform: translateY(-6px) scale(1.01);\n    border-bottom: 6px solid var(--border-3d-dark);\n  }\n  \n  /* Butoane 3D îmbunătățite */\n  .btn-3d {\n    background: var(--gradient-light);\n    box-shadow: var(--shadow-medium);\n    border: 1px solid var(--border-3d-light);\n    border-bottom: 3px solid var(--border-3d-dark);\n    border-right: 2px solid var(--border-3d-medium);\n    transition: all 0.2s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n    position: relative;\n    overflow: hidden;\n  }\n  \n  .btn-3d::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 50%;\n    background: linear-gradient(180deg, rgba(255, 255, 255, 0.2), transparent);\n    pointer-events: none;\n  }\n  \n  .btn-3d:hover {\n    box-shadow: var(--shadow-heavy);\n    transform: translateY(-2px);\n    border-bottom: 4px solid var(--border-3d-dark);\n  }\n  \n  .btn-3d:active {\n    background: var(--gradient-pressed);\n    border-bottom: 1px solid var(--border-3d-dark);\n    transform: translateY(1px);\n    box-shadow: var(--shadow-subtle);\n  }\n  \n  /* Iconuri cu animații */\n  .icon-3d {\n    transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n    filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.1));\n  }\n  \n  .icon-3d:hover {\n    transform: translateY(-2px) scale(1.1);\n    filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.15));\n  }\n  \n  /* Inputuri cu efecte 3D */\n  .input-3d {\n    box-shadow: var(--shadow-inset);\n    border: 1px solid var(--border-3d-medium);\n    border-top: 2px solid var(--border-3d-dark);\n    background: linear-gradient(145deg, rgba(255, 255, 255, 0.98), rgba(255, 255, 255, 1));\n    transition: all 0.2s ease;\n  }\n  \n  .input-3d:focus {\n    box-shadow: var(--shadow-inset), 0 0 0 2px rgba(59, 130, 246, 0.3);\n    border-color: rgb(59, 130, 246);\n  }\n  \n  /* Progress bars cu efecte 3D */\n  .progress-3d {\n    background: linear-gradient(145deg, #e5e7eb, #f3f4f6);\n    box-shadow: var(--shadow-inset);\n    border-radius: 12px;\n    overflow: hidden;\n    position: relative;\n  }\n  \n  .progress-3d::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 30%;\n    background: linear-gradient(180deg, rgba(255, 255, 255, 0.3), transparent);\n    border-radius: 12px 12px 0 0;\n  }\n  \n  .progress-fill-3d {\n    background: linear-gradient(145deg, #3b82f6, #1d4ed8);\n    box-shadow: 0 2px 4px rgba(59, 130, 246, 0.3);\n    border-radius: 10px;\n    position: relative;\n    overflow: hidden;\n  }\n  \n  .progress-fill-3d::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 40%;\n    background: linear-gradient(180deg, rgba(255, 255, 255, 0.25), transparent);\n    border-radius: 10px 10px 0 0;\n  }\n}\n\n/**\n * Base typography. This is not applied to elements which have an ancestor with a Tailwind text class.\n */\n@layer base {\n  :where(:not(:has([class*=\" text-\"]), :not(:has([class^=\"text-\"])))) {\n    h1 {\n      font-size: var(--text-2xl);\n      font-weight: var(--font-weight-medium);\n      line-height: 1.5;\n    }\n\n    h2 {\n      font-size: var(--text-xl);\n      font-weight: var(--font-weight-medium);\n      line-height: 1.5;\n    }\n\n    h3 {\n      font-size: var(--text-lg);\n      font-weight: var(--font-weight-medium);\n      line-height: 1.5;\n    }\n\n    h4 {\n      font-size: var(--text-base);\n      font-weight: var(--font-weight-medium);\n      line-height: 1.5;\n    }\n\n    p {\n      font-size: var(--text-base);\n      font-weight: var(--font-weight-normal);\n      line-height: 1.5;\n    }\n\n    label {\n      font-size: var(--text-base);\n      font-weight: var(--font-weight-medium);\n      line-height: 1.5;\n    }\n\n    button {\n      font-size: var(--text-base);\n      font-weight: var(--font-weight-medium);\n      line-height: 1.5;\n    }\n\n    input {\n      font-size: var(--text-base);\n      font-weight: var(--font-weight-normal);\n      line-height: 1.5;\n    }\n  }\n}\n\nhtml {\n  font-size: var(--font-size);\n}\n\n/* Custom grid classes for year selector */\n@layer utilities {\n  .grid-cols-15 {\n    grid-template-columns: repeat(15, minmax(0, 1fr));\n  }\n  \n  .grid-cols-17 {\n    grid-template-columns: repeat(17, minmax(0, 1fr));\n  }\n  \n  /* =====================================\n     UTILITĂȚI 3D COMPLETE ȘI MODERNE\n     ===================================== */\n  \n  /* Shadow utilities */\n  .shadow-3d-subtle {\n    box-shadow: var(--shadow-subtle);\n  }\n  \n  .shadow-3d {\n    box-shadow: var(--shadow-medium);\n  }\n  \n  .shadow-3d-heavy {\n    box-shadow: var(--shadow-heavy);\n  }\n  \n  .shadow-inset-3d {\n    box-shadow: var(--shadow-inset);\n  }\n  \n  /* Border utilities */\n  .border-3d-light {\n    border: 1px solid var(--border-3d-light);\n    border-bottom: 2px solid var(--border-3d-medium);\n  }\n  \n  .border-3d {\n    border: 2px solid var(--border-3d-light);\n    border-bottom: 3px solid var(--border-3d-dark);\n    border-right: 2px solid var(--border-3d-medium);\n  }\n  \n  .border-3d-heavy {\n    border: 2px solid var(--border-3d-light);\n    border-bottom: 4px solid var(--border-3d-dark);\n    border-right: 3px solid var(--border-3d-medium);\n  }\n  \n  /* Background gradients */\n  .gradient-3d {\n    background: var(--gradient-light);\n  }\n  \n  .gradient-3d-pressed {\n    background: var(--gradient-pressed);\n  }\n  \n  /* Hover effects */\n  .hover-lift {\n    transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n  }\n  \n  .hover-lift:hover {\n    transform: translateY(-4px) scale(1.02);\n    box-shadow: var(--shadow-heavy);\n  }\n  \n  .hover-lift-subtle {\n    transition: all 0.2s ease;\n  }\n  \n  .hover-lift-subtle:hover {\n    transform: translateY(-2px) scale(1.01);\n    box-shadow: var(--shadow-medium);\n  }\n  \n  /* Press effects */\n  .btn-press {\n    transition: all 0.15s ease;\n  }\n  \n  .btn-press:active {\n    transform: translateY(1px) scale(0.98);\n    box-shadow: var(--shadow-subtle);\n  }\n  \n  /* Floating animations */\n  .float-gentle {\n    animation: float-gentle 3s ease-in-out infinite;\n  }\n  \n  .float-medium {\n    animation: float-medium 2.5s ease-in-out infinite;\n  }\n  \n  .float-active {\n    animation: float-active 2s ease-in-out infinite;\n  }\n  \n  /* Pulse glow effects */\n  .pulse-glow {\n    animation: pulse-glow 2s ease-in-out infinite;\n  }\n  \n  .pulse-glow-fast {\n    animation: pulse-glow-fast 1s ease-in-out infinite;\n  }\n  \n  /* Shimmer effect */\n  .shimmer {\n    position: relative;\n    overflow: hidden;\n  }\n  \n  .shimmer::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);\n    animation: shimmer 2s ease-in-out infinite;\n  }\n  \n  /* Scale animations */\n  .scale-hover {\n    transition: transform 0.2s ease;\n  }\n  \n  .scale-hover:hover {\n    transform: scale(1.05);\n  }\n  \n  .scale-press:active {\n    transform: scale(0.95);\n  }\n  \n  /* Group hover effects */\n  .group-lift {\n    transition: all 0.3s ease;\n  }\n  \n  .group:hover .group-lift {\n    transform: translateY(-2px);\n  }\n  \n  /* Rotation effects */\n  .rotate-hover {\n    transition: transform 0.3s ease;\n  }\n  \n  .rotate-hover:hover {\n    transform: rotate(5deg);\n  }\n  \n  /* Tilt effects */\n  .tilt-hover {\n    transition: transform 0.3s ease;\n    transform-style: preserve-3d;\n  }\n  \n  .tilt-hover:hover {\n    transform: perspective(1000px) rotateX(10deg) rotateY(10deg);\n  }\n}\n\n/* ==============================\n   ANIMAȚII PERSONALIZATE MODERNE\n   ============================== */\n\n@keyframes float-gentle {\n  0%, 100% { \n    transform: translateY(0px) rotate(0deg); \n  }\n  50% { \n    transform: translateY(-3px) rotate(1deg); \n  }\n}\n\n@keyframes float-medium {\n  0%, 100% { \n    transform: translateY(0px) scale(1); \n  }\n  50% { \n    transform: translateY(-5px) scale(1.02); \n  }\n}\n\n@keyframes float-active {\n  0%, 100% { \n    transform: translateY(0px) rotate(0deg) scale(1); \n  }\n  33% { \n    transform: translateY(-4px) rotate(1deg) scale(1.01); \n  }\n  66% { \n    transform: translateY(-2px) rotate(-1deg) scale(1.01); \n  }\n}\n\n@keyframes pulse-glow {\n  0%, 100% { \n    box-shadow: 0 0 5px rgba(59, 130, 246, 0.3),\n                0 0 10px rgba(59, 130, 246, 0.1),\n                0 0 15px rgba(59, 130, 246, 0.05);\n  }\n  50% { \n    box-shadow: 0 0 10px rgba(59, 130, 246, 0.4),\n                0 0 20px rgba(59, 130, 246, 0.2),\n                0 0 30px rgba(59, 130, 246, 0.1);\n  }\n}\n\n@keyframes pulse-glow-fast {\n  0%, 100% { \n    box-shadow: 0 0 3px rgba(59, 130, 246, 0.3);\n    transform: scale(1);\n  }\n  50% { \n    box-shadow: 0 0 8px rgba(59, 130, 246, 0.5);\n    transform: scale(1.02);\n  }\n}\n\n@keyframes shimmer {\n  0% {\n    left: -100%;\n  }\n  100% {\n    left: 100%;\n  }\n}\n\n@keyframes bounce-subtle {\n  0%, 20%, 50%, 80%, 100% {\n    transform: translateY(0);\n  }\n  40% {\n    transform: translateY(-3px);\n  }\n  60% {\n    transform: translateY(-1px);\n  }\n}\n\n@keyframes slide-in-up {\n  0% {\n    transform: translateY(20px);\n    opacity: 0;\n  }\n  100% {\n    transform: translateY(0);\n    opacity: 1;\n  }\n}\n\n@keyframes slide-in-left {\n  0% {\n    transform: translateX(-20px);\n    opacity: 0;\n  }\n  100% {\n    transform: translateX(0);\n    opacity: 1;\n  }\n}\n\n/* Aplicare animații */\n.animate-float-gentle {\n  animation: float-gentle 3s ease-in-out infinite;\n}\n\n.animate-float-medium {\n  animation: float-medium 2.5s ease-in-out infinite;\n}\n\n.animate-float-active {\n  animation: float-active 2s ease-in-out infinite;\n}\n\n.animate-pulse-glow {\n  animation: pulse-glow 2s ease-in-out infinite;\n}\n\n.animate-pulse-glow-fast {\n  animation: pulse-glow-fast 1s ease-in-out infinite;\n}\n\n.animate-bounce-subtle {\n  animation: bounce-subtle 1s ease-in-out infinite;\n}\n\n.animate-slide-in-up {\n  animation: slide-in-up 0.3s ease-out;\n}\n\n.animate-slide-in-left {\n  animation: slide-in-left 0.3s ease-out;\n}\n\n/* Starea de încărcare pentru toate elementele */\n.loading-skeleton {\n  background: linear-gradient(90deg, rgba(255, 255, 255, 0.2) 25%, rgba(255, 255, 255, 0.4) 50%, rgba(255, 255, 255, 0.2) 75%);\n  background-size: 200% 100%;\n  animation: loading-pulse 1.5s ease-in-out infinite;\n}\n\n@keyframes loading-pulse {\n  0% {\n    background-position: 200% 0;\n  }\n  100% {\n    background-position: -200% 0;\n  }\n}",
    "/public/manifest.json": "{\n  \"name\": \"Evidența Cheltuielilor\",\n  \"short_name\": \"Cheltuieli\",\n  \"description\": \"Aplicație pentru evidența cheltuielilor lunare cu sistem de notificări și rapoarte\",\n  \"start_url\": \"/\",\n  \"display\": \"standalone\",\n  \"background_color\": \"#ffffff\",\n  \"theme_color\": \"#3b82f6\",\n  \"icons\": [\n    {\n      \"src\": \"icon-192.png\",\n      \"sizes\": \"192x192\",\n      \"type\": \"image/png\"\n    },\n    {\n      \"src\": \"icon-512.png\",\n      \"sizes\": \"512x512\",\n      \"type\": \"image/png\"\n    }\n  ]\n}",
    "/public/sw.js": "const CACHE_NAME = 'evidenta-cheltuieli-v1';\nconst urlsToCache = [\n  '/',\n  '/static/js/bundle.js',\n  '/static/css/main.css',\n  '/manifest.json'\n];\n\nself.addEventListener('install', (event) => {\n  event.waitUntil(\n    caches.open(CACHE_NAME)\n      .then((cache) => cache.addAll(urlsToCache))\n  );\n});\n\nself.addEventListener('fetch', (event) => {\n  event.respondWith(\n    caches.match(event.request)\n      .then((response) => {\n        if (response) {\n          return response;\n        }\n        return fetch(event.request);\n      }\n    )\n  );\n});"
  },
  "components": {
    "/components/FuelRequestApp.tsx": {
      "type": "main_component",
      "description": "Componenta principală pentru aplicația de cerere carburant refactorizată",
      "dependencies": ["PersonEditModal", "DocumentPreview", "DocumentRenderer", "PersonalDataSection"]
    },
    "/components/FuelRequestApp/constants.ts": {
      "type": "constants",  
      "description": "Constante și configurări pentru aplicația de cerere carburant"
    },
    "/components/FuelRequestApp/helpers.ts": {
      "type": "utilities",
      "description": "Funcții utilitare pentru formatare și validare"  
    },
    "/components/FuelRequestApp/types.ts": {
      "type": "types",
      "description": "Definițiile TypeScript pentru aplicația de cerere carburant"
    },
    "/components/FuelRequestApp/formHandlers.ts": {
      "type": "handlers",
      "description": "Gestionarea stării formularelor și operațiuni pe bonuri"
    },
    "/components/FuelRequestApp/draftManager.ts": {
      "type": "manager",
      "description": "Managementul draft-urilor și auto-save"
    },
    "/components/FuelRequestApp/DocumentRenderer.tsx": {
      "type": "component",
      "description": "Componenta pentru rendering-ul documentului complet"
    },
    "/components/FuelRequestApp/PersonalDataSection.tsx": {
      "type": "component", 
      "description": "Secțiunea de date personale cu sub-componente"
    }
  },
  "hooks": {
    "/hooks/useAppState.ts": {
      "type": "hook",
      "description": "Hook pentru gestionarea stării aplicației"
    },
    "/hooks/useDatabase.ts": {
      "type": "hook", 
      "description": "Hook pentru operațiuni cu baza de date"
    },
    "/hooks/usePWA.ts": {
      "type": "hook",
      "description": "Hook pentru funcționalități PWA"
    },
    "/hooks/useBackup.ts": {
      "type": "hook",
      "description": "Hook pentru backup și restore"
    },
    "/hooks/useFuelRequests.ts": {
      "type": "hook",
      "description": "Hook pentru gestionarea cererilor de carburant"
    }
  },
  "types": {
    "/types/expense.ts": {
      "type": "types",
      "description": "Tipuri pentru cheltuieli și servicii"
    },
    "/types/fuelRequest.ts": {
      "type": "types", 
      "description": "Tipuri pentru cererile de carburant"
    }
  },
  "utils": {
    "/utils/appUtils.ts": {
      "type": "utilities",
      "description": "Utilități generale pentru aplicație"
    }
  },
  "database": {
    "/prisma/schema.prisma": {
      "type": "schema",
      "description": "Schema bazei de date Prisma"
    },
    "/src/lib/database.ts": {
      "type": "database",
      "description": "Configurarea și conexiunea la baza de date"
    },
    "/src/lib/clientDatabase.ts": {
      "type": "database",
      "description": "Client-side database operations"
    }
  },
  "ui_components": {
    "shadcn_ui": {
      "description": "Componente UI din shadcn/ui",
      "count": 35,
      "location": "/components/ui/"
    }
  },
  "config_files": {
    "/tsconfig.json": {
      "type": "config",
      "description": "Configurarea TypeScript"
    },
    "/tsconfig.app.json": {
      "type": "config", 
      "description": "Configurarea TypeScript pentru aplicație"
    },
    "/tsconfig.node.json": {
      "type": "config",
      "description": "Configurarea TypeScript pentru Node.js"
    }
  },
  "features": {
    "expense_tracking": {
      "description": "Sistem complet de evidență cheltuieli",
      "components": ["YearSelector", "MonthExpenses", "ExpenseCard", "ReportsView"]
    },
    "fuel_requests": {
      "description": "Aplicație pentru cereri de decontare carburant",
      "components": ["FuelRequestApp", "DocumentRenderer", "PersonalDataSection"]
    },
    "pwa_support": {
      "description": "Suport PWA complet cu notificări",
      "files": ["manifest.json", "sw.js", "usePWA.ts"]
    },
    "database_management": {
      "description": "Gestionare avansată bază de date cu backup/restore", 
      "components": ["DatabaseOperationsModal", "BackupModal", "useDatabase"]
    },
    "3d_styling": {
      "description": "Sistem complet de stilizare 3D moderna",
      "location": "/styles/globals.css"
    }
  },
  "installation": {
    "requirements": {
      "node": ">=18.0.0",
      "npm": ">=8.0.0",
      "typescript": ">=5.0.0"
    },
    "dependencies": {
      "react": "^18.3.1",
      "typescript": "~5.6.2", 
      "vite": "^5.4.10",
      "tailwindcss": "^4.0.0",
      "prisma": "^5.22.0"
    }
  },
  "backup_notes": {
    "created_by": "Figma Make AI Assistant",
    "backup_type": "complete_application_backup",
    "restore_instructions": "Pentru a restabilii aplicația, copiați toate fișierele în directorul proiectului și rulați 'npm install' apoi 'npm run dev'",
    "missing_files": "Acest backup nu include node_modules, .env, și alte fișiere generate automat"
  }
}